{"version":3,"file":"featherScroll.min.js","sources":["../node_modules/lenis/dist/lenis.mjs","../src/featherScroll.js"],"sourcesContent":["// package.json\nvar version = \"1.3.1\";\n\n// packages/core/src/maths.ts\nfunction clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max));\n}\nfunction lerp(x, y, t) {\n  return (1 - t) * x + t * y;\n}\nfunction damp(x, y, lambda, deltaTime) {\n  return lerp(x, y, 1 - Math.exp(-lambda * deltaTime));\n}\nfunction modulo(n, d) {\n  return (n % d + d) % d;\n}\n\n// packages/core/src/animate.ts\nvar Animate = class {\n  isRunning = false;\n  value = 0;\n  from = 0;\n  to = 0;\n  currentTime = 0;\n  // These are instanciated in the fromTo method\n  lerp;\n  duration;\n  easing;\n  onUpdate;\n  /**\n   * Advance the animation by the given delta time\n   *\n   * @param deltaTime - The time in seconds to advance the animation\n   */\n  advance(deltaTime) {\n    if (!this.isRunning) return;\n    let completed = false;\n    if (this.duration && this.easing) {\n      this.currentTime += deltaTime;\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1);\n      completed = linearProgress >= 1;\n      const easedProgress = completed ? 1 : this.easing(linearProgress);\n      this.value = this.from + (this.to - this.from) * easedProgress;\n    } else if (this.lerp) {\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime);\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to;\n        completed = true;\n      }\n    } else {\n      this.value = this.to;\n      completed = true;\n    }\n    if (completed) {\n      this.stop();\n    }\n    this.onUpdate?.(this.value, completed);\n  }\n  /** Stop the animation */\n  stop() {\n    this.isRunning = false;\n  }\n  /**\n   * Set up the animation from a starting value to an ending value\n   * with optional parameters for lerping, duration, easing, and onUpdate callback\n   *\n   * @param from - The starting value\n   * @param to - The ending value\n   * @param options - Options for the animation\n   */\n  fromTo(from, to, { lerp: lerp2, duration, easing, onStart, onUpdate }) {\n    this.from = this.value = from;\n    this.to = to;\n    this.lerp = lerp2;\n    this.duration = duration;\n    this.easing = easing;\n    this.currentTime = 0;\n    this.isRunning = true;\n    onStart?.();\n    this.onUpdate = onUpdate;\n  }\n};\n\n// packages/core/src/debounce.ts\nfunction debounce(callback, delay) {\n  let timer;\n  return function(...args) {\n    let context = this;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = void 0;\n      callback.apply(context, args);\n    }, delay);\n  };\n}\n\n// packages/core/src/dimensions.ts\nvar Dimensions = class {\n  constructor(wrapper, content, { autoResize = true, debounce: debounceValue = 250 } = {}) {\n    this.wrapper = wrapper;\n    this.content = content;\n    if (autoResize) {\n      this.debouncedResize = debounce(this.resize, debounceValue);\n      if (this.wrapper instanceof Window) {\n        window.addEventListener(\"resize\", this.debouncedResize, false);\n      } else {\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize);\n        this.wrapperResizeObserver.observe(this.wrapper);\n      }\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize);\n      this.contentResizeObserver.observe(this.content);\n    }\n    this.resize();\n  }\n  width = 0;\n  height = 0;\n  scrollHeight = 0;\n  scrollWidth = 0;\n  // These are instanciated in the constructor as they need information from the options\n  debouncedResize;\n  wrapperResizeObserver;\n  contentResizeObserver;\n  destroy() {\n    this.wrapperResizeObserver?.disconnect();\n    this.contentResizeObserver?.disconnect();\n    if (this.wrapper === window && this.debouncedResize) {\n      window.removeEventListener(\"resize\", this.debouncedResize, false);\n    }\n  }\n  resize = () => {\n    this.onWrapperResize();\n    this.onContentResize();\n  };\n  onWrapperResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n    } else {\n      this.width = this.wrapper.clientWidth;\n      this.height = this.wrapper.clientHeight;\n    }\n  };\n  onContentResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.scrollHeight = this.content.scrollHeight;\n      this.scrollWidth = this.content.scrollWidth;\n    } else {\n      this.scrollHeight = this.wrapper.scrollHeight;\n      this.scrollWidth = this.wrapper.scrollWidth;\n    }\n  };\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height\n    };\n  }\n};\n\n// packages/core/src/emitter.ts\nvar Emitter = class {\n  events = {};\n  /**\n   * Emit an event with the given data\n   * @param event Event name\n   * @param args Data to pass to the event handlers\n   */\n  emit(event, ...args) {\n    let callbacks = this.events[event] || [];\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i]?.(...args);\n    }\n  }\n  /**\n   * Add a callback to the event\n   * @param event Event name\n   * @param cb Callback function\n   * @returns Unsubscribe function\n   */\n  on(event, cb) {\n    this.events[event]?.push(cb) || (this.events[event] = [cb]);\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i);\n    };\n  }\n  /**\n   * Remove a callback from the event\n   * @param event Event name\n   * @param callback Callback function\n   */\n  off(event, callback) {\n    this.events[event] = this.events[event]?.filter((i) => callback !== i);\n  }\n  /**\n   * Remove all event listeners and clean up\n   */\n  destroy() {\n    this.events = {};\n  }\n};\n\n// packages/core/src/virtual-scroll.ts\nvar LINE_HEIGHT = 100 / 6;\nvar listenerOptions = { passive: false };\nvar VirtualScroll = class {\n  constructor(element, options = { wheelMultiplier: 1, touchMultiplier: 1 }) {\n    this.element = element;\n    this.options = options;\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n    this.onWindowResize();\n    this.element.addEventListener(\"wheel\", this.onWheel, listenerOptions);\n    this.element.addEventListener(\n      \"touchstart\",\n      this.onTouchStart,\n      listenerOptions\n    );\n    this.element.addEventListener(\n      \"touchmove\",\n      this.onTouchMove,\n      listenerOptions\n    );\n    this.element.addEventListener(\"touchend\", this.onTouchEnd, listenerOptions);\n  }\n  touchStart = {\n    x: 0,\n    y: 0\n  };\n  lastDelta = {\n    x: 0,\n    y: 0\n  };\n  window = {\n    width: 0,\n    height: 0\n  };\n  emitter = new Emitter();\n  /**\n   * Add an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   */\n  on(event, callback) {\n    return this.emitter.on(event, callback);\n  }\n  /** Remove all event listeners and clean up */\n  destroy() {\n    this.emitter.destroy();\n    window.removeEventListener(\"resize\", this.onWindowResize, false);\n    this.element.removeEventListener(\"wheel\", this.onWheel, listenerOptions);\n    this.element.removeEventListener(\n      \"touchstart\",\n      this.onTouchStart,\n      listenerOptions\n    );\n    this.element.removeEventListener(\n      \"touchmove\",\n      this.onTouchMove,\n      listenerOptions\n    );\n    this.element.removeEventListener(\n      \"touchend\",\n      this.onTouchEnd,\n      listenerOptions\n    );\n  }\n  /**\n   * Event handler for 'touchstart' event\n   *\n   * @param event Touch event\n   */\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches ? event.targetTouches[0] : event;\n    this.touchStart.x = clientX;\n    this.touchStart.y = clientY;\n    this.lastDelta = {\n      x: 0,\n      y: 0\n    };\n    this.emitter.emit(\"scroll\", {\n      deltaX: 0,\n      deltaY: 0,\n      event\n    });\n  };\n  /** Event handler for 'touchmove' event */\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches ? event.targetTouches[0] : event;\n    const deltaX = -(clientX - this.touchStart.x) * this.options.touchMultiplier;\n    const deltaY = -(clientY - this.touchStart.y) * this.options.touchMultiplier;\n    this.touchStart.x = clientX;\n    this.touchStart.y = clientY;\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY\n    };\n    this.emitter.emit(\"scroll\", {\n      deltaX,\n      deltaY,\n      event\n    });\n  };\n  onTouchEnd = (event) => {\n    this.emitter.emit(\"scroll\", {\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event\n    });\n  };\n  /** Event handler for 'wheel' event */\n  onWheel = (event) => {\n    let { deltaX, deltaY, deltaMode } = event;\n    const multiplierX = deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.width : 1;\n    const multiplierY = deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.height : 1;\n    deltaX *= multiplierX;\n    deltaY *= multiplierY;\n    deltaX *= this.options.wheelMultiplier;\n    deltaY *= this.options.wheelMultiplier;\n    this.emitter.emit(\"scroll\", { deltaX, deltaY, event });\n  };\n  onWindowResize = () => {\n    this.window = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  };\n};\n\n// packages/core/src/lenis.ts\nvar Lenis = class {\n  _isScrolling = false;\n  // true when scroll is animating\n  _isStopped = false;\n  // true if user should not be able to scroll - enable/disable programmatically\n  _isLocked = false;\n  // same as isStopped but enabled/disabled when scroll reaches target\n  _preventNextNativeScrollEvent = false;\n  _resetVelocityTimeout = null;\n  __rafID = null;\n  /**\n   * Whether or not the user is touching the screen\n   */\n  isTouching;\n  /**\n   * The time in ms since the lenis instance was created\n   */\n  time = 0;\n  /**\n   * User data that will be forwarded through the scroll event\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   userData: {\n   *     foo: 'bar'\n   *   }\n   * })\n   */\n  userData = {};\n  /**\n   * The last velocity of the scroll\n   */\n  lastVelocity = 0;\n  /**\n   * The current velocity of the scroll\n   */\n  velocity = 0;\n  /**\n   * The direction of the scroll\n   */\n  direction = 0;\n  /**\n   * The options passed to the lenis instance\n   */\n  options;\n  /**\n   * The target scroll value\n   */\n  targetScroll;\n  /**\n   * The animated scroll value\n   */\n  animatedScroll;\n  // These are instanciated here as they don't need information from the options\n  animate = new Animate();\n  emitter = new Emitter();\n  // These are instanciated in the constructor as they need information from the options\n  dimensions;\n  // This is not private because it's used in the Snap class\n  virtualScroll;\n  constructor({\n    wrapper = window,\n    content = document.documentElement,\n    eventsTarget = wrapper,\n    smoothWheel = true,\n    syncTouch = false,\n    syncTouchLerp = 0.075,\n    touchInertiaMultiplier = 35,\n    duration,\n    // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp: lerp2 = 0.1,\n    infinite = false,\n    orientation = \"vertical\",\n    // vertical, horizontal\n    gestureOrientation = \"vertical\",\n    // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = 1,\n    autoResize = true,\n    prevent,\n    virtualScroll,\n    overscroll = true,\n    autoRaf = false,\n    anchors = false,\n    autoToggle = false,\n    // https://caniuse.com/?search=transition-behavior\n    allowNestedScroll = false,\n    __experimental__naiveDimensions = false\n  } = {}) {\n    window.lenisVersion = version;\n    if (!wrapper || wrapper === document.documentElement) {\n      wrapper = window;\n    }\n    this.options = {\n      wrapper,\n      content,\n      eventsTarget,\n      smoothWheel,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp: lerp2,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      autoResize,\n      prevent,\n      virtualScroll,\n      overscroll,\n      autoRaf,\n      anchors,\n      autoToggle,\n      allowNestedScroll,\n      __experimental__naiveDimensions\n    };\n    this.dimensions = new Dimensions(wrapper, content, { autoResize });\n    this.updateClassName();\n    this.targetScroll = this.animatedScroll = this.actualScroll;\n    this.options.wrapper.addEventListener(\"scroll\", this.onNativeScroll, false);\n    this.options.wrapper.addEventListener(\"scrollend\", this.onScrollEnd, {\n      capture: true\n    });\n    if (this.options.anchors && this.options.wrapper === window) {\n      this.options.wrapper.addEventListener(\n        \"click\",\n        this.onClick,\n        false\n      );\n    }\n    this.options.wrapper.addEventListener(\n      \"pointerdown\",\n      this.onPointerDown,\n      false\n    );\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\n      touchMultiplier,\n      wheelMultiplier\n    });\n    this.virtualScroll.on(\"scroll\", this.onVirtualScroll);\n    if (this.options.autoToggle) {\n      this.rootElement.addEventListener(\"transitionend\", this.onTransitionEnd, {\n        passive: true\n      });\n    }\n    if (this.options.autoRaf) {\n      this.__rafID = requestAnimationFrame(this.raf);\n    }\n  }\n  /**\n   * Destroy the lenis instance, remove all event listeners and clean up the class name\n   */\n  destroy() {\n    this.emitter.destroy();\n    this.options.wrapper.removeEventListener(\n      \"scroll\",\n      this.onNativeScroll,\n      false\n    );\n    this.options.wrapper.removeEventListener(\"scrollend\", this.onScrollEnd, {\n      capture: true\n    });\n    this.options.wrapper.removeEventListener(\n      \"pointerdown\",\n      this.onPointerDown,\n      false\n    );\n    if (this.options.anchors && this.options.wrapper === window) {\n      this.options.wrapper.removeEventListener(\n        \"click\",\n        this.onClick,\n        false\n      );\n    }\n    this.virtualScroll.destroy();\n    this.dimensions.destroy();\n    this.cleanUpClassName();\n    if (this.__rafID) {\n      cancelAnimationFrame(this.__rafID);\n    }\n  }\n  on(event, callback) {\n    return this.emitter.on(event, callback);\n  }\n  off(event, callback) {\n    return this.emitter.off(event, callback);\n  }\n  onScrollEnd = (e) => {\n    if (!(e instanceof CustomEvent)) {\n      if (this.isScrolling === \"smooth\" || this.isScrolling === false) {\n        e.stopPropagation();\n      }\n    }\n  };\n  dispatchScrollendEvent = () => {\n    this.options.wrapper.dispatchEvent(\n      new CustomEvent(\"scrollend\", {\n        bubbles: this.options.wrapper === window,\n        // cancelable: false,\n        detail: {\n          lenisScrollEnd: true\n        }\n      })\n    );\n  };\n  onTransitionEnd = (event) => {\n    if (event.propertyName.includes(\"overflow\")) {\n      const property = this.isHorizontal ? \"overflow-x\" : \"overflow-y\";\n      const overflow = getComputedStyle(this.rootElement)[property];\n      if ([\"hidden\", \"clip\"].includes(overflow)) {\n        this.stop();\n      } else {\n        this.start();\n      }\n    }\n  };\n  setScroll(scroll) {\n    if (this.isHorizontal) {\n      this.options.wrapper.scrollTo({ left: scroll, behavior: \"instant\" });\n    } else {\n      this.options.wrapper.scrollTo({ top: scroll, behavior: \"instant\" });\n    }\n  }\n  onClick = (event) => {\n    const path = event.composedPath();\n    const anchor = path.find(\n      (node) => node instanceof HTMLAnchorElement && (node.getAttribute(\"href\")?.startsWith(\"#\") || node.getAttribute(\"href\")?.startsWith(\"/#\") || node.getAttribute(\"href\")?.startsWith(\"./#\"))\n    );\n    if (anchor) {\n      const id = anchor.getAttribute(\"href\");\n      if (id) {\n        const options = typeof this.options.anchors === \"object\" && this.options.anchors ? this.options.anchors : void 0;\n        let target = `#${id.split(\"#\")[1]}`;\n        if ([\"#\", \"/#\", \"./#\", \"#top\", \"/#top\", \"./#top\"].includes(id)) {\n          target = 0;\n        }\n        this.scrollTo(target, options);\n      }\n    }\n  };\n  onPointerDown = (event) => {\n    if (event.button === 1) {\n      this.reset();\n    }\n  };\n  onVirtualScroll = (data) => {\n    if (typeof this.options.virtualScroll === \"function\" && this.options.virtualScroll(data) === false)\n      return;\n    const { deltaX, deltaY, event } = data;\n    this.emitter.emit(\"virtual-scroll\", { deltaX, deltaY, event });\n    if (event.ctrlKey) return;\n    if (event.lenisStopPropagation) return;\n    const isTouch = event.type.includes(\"touch\");\n    const isWheel = event.type.includes(\"wheel\");\n    this.isTouching = event.type === \"touchstart\" || event.type === \"touchmove\";\n    const isClickOrTap = deltaX === 0 && deltaY === 0;\n    const isTapToStop = this.options.syncTouch && isTouch && event.type === \"touchstart\" && isClickOrTap && !this.isStopped && !this.isLocked;\n    if (isTapToStop) {\n      this.reset();\n      return;\n    }\n    const isUnknownGesture = this.options.gestureOrientation === \"vertical\" && deltaY === 0 || this.options.gestureOrientation === \"horizontal\" && deltaX === 0;\n    if (isClickOrTap || isUnknownGesture) {\n      return;\n    }\n    let composedPath = event.composedPath();\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement));\n    const prevent = this.options.prevent;\n    if (!!composedPath.find(\n      (node) => node instanceof HTMLElement && (typeof prevent === \"function\" && prevent?.(node) || node.hasAttribute?.(\"data-lenis-prevent\") || isTouch && node.hasAttribute?.(\"data-lenis-prevent-touch\") || isWheel && node.hasAttribute?.(\"data-lenis-prevent-wheel\") || this.options.allowNestedScroll && this.checkNestedScroll(node, { deltaX, deltaY }))\n    ))\n      return;\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault();\n      return;\n    }\n    const isSmooth = this.options.syncTouch && isTouch || this.options.smoothWheel && isWheel;\n    if (!isSmooth) {\n      this.isScrolling = \"native\";\n      this.animate.stop();\n      event.lenisStopPropagation = true;\n      return;\n    }\n    let delta = deltaY;\n    if (this.options.gestureOrientation === \"both\") {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX;\n    } else if (this.options.gestureOrientation === \"horizontal\") {\n      delta = deltaX;\n    }\n    if (!this.options.overscroll || this.options.infinite || this.options.wrapper !== window && (this.animatedScroll > 0 && this.animatedScroll < this.limit || this.animatedScroll === 0 && deltaY > 0 || this.animatedScroll === this.limit && deltaY < 0)) {\n      event.lenisStopPropagation = true;\n    }\n    event.preventDefault();\n    const isSyncTouch = isTouch && this.options.syncTouch;\n    const isTouchEnd = isTouch && event.type === \"touchend\";\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5;\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier;\n    }\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...isSyncTouch ? {\n        lerp: hasTouchInertia ? this.options.syncTouchLerp : 1\n        // immediate: !hasTouchInertia,\n      } : {\n        lerp: this.options.lerp,\n        duration: this.options.duration,\n        easing: this.options.easing\n      }\n    });\n  };\n  /**\n   * Force lenis to recalculate the dimensions\n   */\n  resize() {\n    this.dimensions.resize();\n    this.animatedScroll = this.targetScroll = this.actualScroll;\n    this.emit();\n  }\n  emit() {\n    this.emitter.emit(\"scroll\", this);\n  }\n  onNativeScroll = () => {\n    if (this._resetVelocityTimeout !== null) {\n      clearTimeout(this._resetVelocityTimeout);\n      this._resetVelocityTimeout = null;\n    }\n    if (this._preventNextNativeScrollEvent) {\n      this._preventNextNativeScrollEvent = false;\n      return;\n    }\n    if (this.isScrolling === false || this.isScrolling === \"native\") {\n      const lastScroll = this.animatedScroll;\n      this.animatedScroll = this.targetScroll = this.actualScroll;\n      this.lastVelocity = this.velocity;\n      this.velocity = this.animatedScroll - lastScroll;\n      this.direction = Math.sign(\n        this.animatedScroll - lastScroll\n      );\n      if (!this.isStopped) {\n        this.isScrolling = \"native\";\n      }\n      this.emit();\n      if (this.velocity !== 0) {\n        this._resetVelocityTimeout = setTimeout(() => {\n          this.lastVelocity = this.velocity;\n          this.velocity = 0;\n          this.isScrolling = false;\n          this.emit();\n        }, 400);\n      }\n    }\n  };\n  reset() {\n    this.isLocked = false;\n    this.isScrolling = false;\n    this.animatedScroll = this.targetScroll = this.actualScroll;\n    this.lastVelocity = this.velocity = 0;\n    this.animate.stop();\n  }\n  /**\n   * Start lenis scroll after it has been stopped\n   */\n  start() {\n    if (!this.isStopped) return;\n    this.reset();\n    this.isStopped = false;\n  }\n  /**\n   * Stop lenis scroll\n   */\n  stop() {\n    if (this.isStopped) return;\n    this.reset();\n    this.isStopped = true;\n  }\n  /**\n   * RequestAnimationFrame for lenis\n   *\n   * @param time The time in ms from an external clock like `requestAnimationFrame` or Tempus\n   */\n  raf = (time) => {\n    const deltaTime = time - (this.time || time);\n    this.time = time;\n    this.animate.advance(deltaTime * 1e-3);\n    if (this.options.autoRaf) {\n      this.__rafID = requestAnimationFrame(this.raf);\n    }\n  };\n  /**\n   * Scroll to a target value\n   *\n   * @param target The target value to scroll to\n   * @param options The options for the scroll\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   offset: 100,\n   *   duration: 1,\n   *   easing: (t) => 1 - Math.cos((t * Math.PI) / 2),\n   *   lerp: 0.1,\n   *   onStart: () => {\n   *     console.log('onStart')\n   *   },\n   *   onComplete: () => {\n   *     console.log('onComplete')\n   *   },\n   * })\n   */\n  scrollTo(target, {\n    offset = 0,\n    immediate = false,\n    lock = false,\n    duration = this.options.duration,\n    easing = this.options.easing,\n    lerp: lerp2 = this.options.lerp,\n    onStart,\n    onComplete,\n    force = false,\n    // scroll even if stopped\n    programmatic = true,\n    // called from outside of the class\n    userData\n  } = {}) {\n    if ((this.isStopped || this.isLocked) && !force) return;\n    if (typeof target === \"string\" && [\"top\", \"left\", \"start\"].includes(target)) {\n      target = 0;\n    } else if (typeof target === \"string\" && [\"bottom\", \"right\", \"end\"].includes(target)) {\n      target = this.limit;\n    } else {\n      let node;\n      if (typeof target === \"string\") {\n        node = document.querySelector(target);\n      } else if (target instanceof HTMLElement && target?.nodeType) {\n        node = target;\n      }\n      if (node) {\n        if (this.options.wrapper !== window) {\n          const wrapperRect = this.rootElement.getBoundingClientRect();\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top;\n        }\n        const rect = node.getBoundingClientRect();\n        target = (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll;\n      }\n    }\n    if (typeof target !== \"number\") return;\n    target += offset;\n    target = Math.round(target);\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll;\n        const distance = target - this.animatedScroll;\n        if (distance > this.limit / 2) {\n          target = target - this.limit;\n        } else if (distance < -this.limit / 2) {\n          target = target + this.limit;\n        }\n      }\n    } else {\n      target = clamp(0, target, this.limit);\n    }\n    if (target === this.targetScroll) {\n      onStart?.(this);\n      onComplete?.(this);\n      return;\n    }\n    this.userData = userData ?? {};\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target;\n      this.setScroll(this.scroll);\n      this.reset();\n      this.preventNextNativeScrollEvent();\n      this.emit();\n      onComplete?.(this);\n      this.userData = {};\n      requestAnimationFrame(() => {\n        this.dispatchScrollendEvent();\n      });\n      return;\n    }\n    if (!programmatic) {\n      this.targetScroll = target;\n    }\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp: lerp2,\n      onStart: () => {\n        if (lock) this.isLocked = true;\n        this.isScrolling = \"smooth\";\n        onStart?.(this);\n      },\n      onUpdate: (value, completed) => {\n        this.isScrolling = \"smooth\";\n        this.lastVelocity = this.velocity;\n        this.velocity = value - this.animatedScroll;\n        this.direction = Math.sign(this.velocity);\n        this.animatedScroll = value;\n        this.setScroll(this.scroll);\n        if (programmatic) {\n          this.targetScroll = value;\n        }\n        if (!completed) this.emit();\n        if (completed) {\n          this.reset();\n          this.emit();\n          onComplete?.(this);\n          this.userData = {};\n          requestAnimationFrame(() => {\n            this.dispatchScrollendEvent();\n          });\n          this.preventNextNativeScrollEvent();\n        }\n      }\n    });\n  }\n  preventNextNativeScrollEvent() {\n    this._preventNextNativeScrollEvent = true;\n    requestAnimationFrame(() => {\n      this._preventNextNativeScrollEvent = false;\n    });\n  }\n  checkNestedScroll(node, { deltaX, deltaY }) {\n    const time = Date.now();\n    const cache = node._lenis ??= {};\n    let hasOverflowX, hasOverflowY, isScrollableX, isScrollableY, scrollWidth, scrollHeight, clientWidth, clientHeight;\n    const gestureOrientation = this.options.gestureOrientation;\n    if (time - (cache.time ?? 0) > 2e3) {\n      cache.time = Date.now();\n      const computedStyle = window.getComputedStyle(node);\n      cache.computedStyle = computedStyle;\n      const overflowXString = computedStyle.overflowX;\n      const overflowYString = computedStyle.overflowY;\n      hasOverflowX = [\"auto\", \"overlay\", \"scroll\"].includes(overflowXString);\n      hasOverflowY = [\"auto\", \"overlay\", \"scroll\"].includes(overflowYString);\n      cache.hasOverflowX = hasOverflowX;\n      cache.hasOverflowY = hasOverflowY;\n      if (!hasOverflowX && !hasOverflowY) return false;\n      if (gestureOrientation === \"vertical\" && !hasOverflowY) return false;\n      if (gestureOrientation === \"horizontal\" && !hasOverflowX) return false;\n      scrollWidth = node.scrollWidth;\n      scrollHeight = node.scrollHeight;\n      clientWidth = node.clientWidth;\n      clientHeight = node.clientHeight;\n      isScrollableX = scrollWidth > clientWidth;\n      isScrollableY = scrollHeight > clientHeight;\n      cache.isScrollableX = isScrollableX;\n      cache.isScrollableY = isScrollableY;\n      cache.scrollWidth = scrollWidth;\n      cache.scrollHeight = scrollHeight;\n      cache.clientWidth = clientWidth;\n      cache.clientHeight = clientHeight;\n    } else {\n      isScrollableX = cache.isScrollableX;\n      isScrollableY = cache.isScrollableY;\n      hasOverflowX = cache.hasOverflowX;\n      hasOverflowY = cache.hasOverflowY;\n      scrollWidth = cache.scrollWidth;\n      scrollHeight = cache.scrollHeight;\n      clientWidth = cache.clientWidth;\n      clientHeight = cache.clientHeight;\n    }\n    if (!hasOverflowX && !hasOverflowY || !isScrollableX && !isScrollableY) {\n      return false;\n    }\n    if (gestureOrientation === \"vertical\" && (!hasOverflowY || !isScrollableY))\n      return false;\n    if (gestureOrientation === \"horizontal\" && (!hasOverflowX || !isScrollableX))\n      return false;\n    let orientation;\n    if (gestureOrientation === \"horizontal\") {\n      orientation = \"x\";\n    } else if (gestureOrientation === \"vertical\") {\n      orientation = \"y\";\n    } else {\n      const isScrollingX = deltaX !== 0;\n      const isScrollingY = deltaY !== 0;\n      if (isScrollingX && hasOverflowX && isScrollableX) {\n        orientation = \"x\";\n      }\n      if (isScrollingY && hasOverflowY && isScrollableY) {\n        orientation = \"y\";\n      }\n    }\n    if (!orientation) return false;\n    let scroll, maxScroll, delta, hasOverflow, isScrollable;\n    if (orientation === \"x\") {\n      scroll = node.scrollLeft;\n      maxScroll = scrollWidth - clientWidth;\n      delta = deltaX;\n      hasOverflow = hasOverflowX;\n      isScrollable = isScrollableX;\n    } else if (orientation === \"y\") {\n      scroll = node.scrollTop;\n      maxScroll = scrollHeight - clientHeight;\n      delta = deltaY;\n      hasOverflow = hasOverflowY;\n      isScrollable = isScrollableY;\n    } else {\n      return false;\n    }\n    const willScroll = delta > 0 ? scroll < maxScroll : scroll > 0;\n    return willScroll && hasOverflow && isScrollable;\n  }\n  /**\n   * The root element on which lenis is instanced\n   */\n  get rootElement() {\n    return this.options.wrapper === window ? document.documentElement : this.options.wrapper;\n  }\n  /**\n   * The limit which is the maximum scroll value\n   */\n  get limit() {\n    if (this.options.__experimental__naiveDimensions) {\n      if (this.isHorizontal) {\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth;\n      } else {\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight;\n      }\n    } else {\n      return this.dimensions.limit[this.isHorizontal ? \"x\" : \"y\"];\n    }\n  }\n  /**\n   * Whether or not the scroll is horizontal\n   */\n  get isHorizontal() {\n    return this.options.orientation === \"horizontal\";\n  }\n  /**\n   * The actual scroll value\n   */\n  get actualScroll() {\n    const wrapper = this.options.wrapper;\n    return this.isHorizontal ? wrapper.scrollX ?? wrapper.scrollLeft : wrapper.scrollY ?? wrapper.scrollTop;\n  }\n  /**\n   * The current scroll value\n   */\n  get scroll() {\n    return this.options.infinite ? modulo(this.animatedScroll, this.limit) : this.animatedScroll;\n  }\n  /**\n   * The progress of the scroll relative to the limit\n   */\n  get progress() {\n    return this.limit === 0 ? 1 : this.scroll / this.limit;\n  }\n  /**\n   * Current scroll state\n   */\n  get isScrolling() {\n    return this._isScrolling;\n  }\n  set isScrolling(value) {\n    if (this._isScrolling !== value) {\n      this._isScrolling = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is stopped\n   */\n  get isStopped() {\n    return this._isStopped;\n  }\n  set isStopped(value) {\n    if (this._isStopped !== value) {\n      this._isStopped = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is locked\n   */\n  get isLocked() {\n    return this._isLocked;\n  }\n  set isLocked(value) {\n    if (this._isLocked !== value) {\n      this._isLocked = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is smooth scrolling\n   */\n  get isSmooth() {\n    return this.isScrolling === \"smooth\";\n  }\n  /**\n   * The class name applied to the wrapper element\n   */\n  get className() {\n    let className = \"lenis\";\n    if (this.options.autoToggle) className += \" lenis-autoToggle\";\n    if (this.isStopped) className += \" lenis-stopped\";\n    if (this.isLocked) className += \" lenis-locked\";\n    if (this.isScrolling) className += \" lenis-scrolling\";\n    if (this.isScrolling === \"smooth\") className += \" lenis-smooth\";\n    return className;\n  }\n  updateClassName() {\n    this.cleanUpClassName();\n    this.rootElement.className = `${this.rootElement.className} ${this.className}`.trim();\n  }\n  cleanUpClassName() {\n    this.rootElement.className = this.rootElement.className.replace(/lenis(-\\w+)?/g, \"\").trim();\n  }\n};\nexport {\n  Lenis as default\n};\n//# sourceMappingURL=lenis.mjs.map","import Lenis from 'lenis'\r\nclass FeatherScroll {\r\n    // Stores all instances of FeatherScroll\r\n    static instances = [];\r\n    constructor(options = {}) {\r\n      this.wrapper = options.wrapper || document.documentElement;\r\n      this.content = options.content || document.body;\r\n      // Initialize Lenis with custom options or defaults\r\n      this.lenis = new Lenis({\r\n        wrapper: this.wrapper,\r\n        content: this.content,\r\n        smooth: options.smooth ?? true,\r\n        duration: options.duration ?? 1.2,\r\n        easing: options.easing ?? ((t) => 1 - Math.pow(1 - t, 3)),\r\n        direction: options.direction ?? 'vertical',\r\n        gestureDirection: options.gestureDirection ?? 'both',\r\n        wheelMultiplier: options.mouseSenstivity ?? 1,\r\n        touchMultiplier: options.touchSenstivity ?? 2,\r\n        infinite: options.infinite ?? false\r\n      });\r\n      // Scroll direction tracking\r\n      this.scrollDirection = 'down';\r\n      this.lastScroll = 0;\r\n      // Elements with sticky and parallax behavior\r\n      this.stickyElements = [...this.content.querySelectorAll('[data-scroll-sticky]')];\r\n      this.parallaxElements = [...this.content.querySelectorAll('[data-scroll-speed]')];\r\n      // Store initial positions for parallax elements\r\n      this.parallaxElements.forEach((el) => {\r\n        const rect = el.getBoundingClientRect();\r\n        el.dataset.initialTop = rect.top + window.scrollY;\r\n        el.dataset.initialLeft = rect.left + window.scrollX;\r\n      });\r\n      // Initialize features\r\n      this.initStickyElements();\r\n      this.trackScrollDirection();\r\n      this.startRAF(); // Start animation loop\r\n      FeatherScroll.instances.push(this); // Register instance\r\n      if (window.ScrollTrigger) {\r\n        this.setupScrollTrigger();\r\n      }\r\n      // Observe body overflow for automatic disabling\r\n      this.observeBodyOverflow();\r\n    }\r\n    // RAF loop for Lenis + sticky + parallax\r\n    startRAF() {\r\n      const raf = (time) => {\r\n        this.lenis.raf(time);\r\n        this.updateStickyElements();\r\n        this.updateParallax();\r\n        requestAnimationFrame(raf);\r\n      };\r\n      requestAnimationFrame(raf);\r\n    }\r\n    // Detect scroll direction: 'up' or 'down'\r\n    trackScrollDirection() {\r\n      this.lenis.on('scroll', ({ scroll }) => {\r\n        const newDirection = scroll > this.lastScroll ? 'down' : 'up';\r\n        if (newDirection !== this.scrollDirection) {\r\n          this.scrollDirection = newDirection;\r\n        }\r\n        this.lastScroll = scroll;\r\n      });\r\n    }\r\n    // Observe overflow-y on body, pause/resume Lenis\r\n    observeBodyOverflow() {\r\n      const observer = new MutationObserver(() => {\r\n        const overflowY = window.getComputedStyle(document.body).overflowY;\r\n        if (overflowY === 'hidden') {\r\n          this.lenis.stop();\r\n        } else {\r\n          this.lenis.start();\r\n        }\r\n      });\r\n      observer.observe(document.body, {\r\n        attributes: true,\r\n        attributeFilter: ['style']\r\n      });\r\n      // Initial check\r\n      const initialOverflowY = window.getComputedStyle(document.body).overflowY;\r\n      if (initialOverflowY === 'hidden') {\r\n        this.lenis.stop();\r\n      }\r\n    }\r\n    // Return current scroll direction\r\n    getScrollDirection() {\r\n      return this.scrollDirection || 'down';\r\n    }\r\n    // Set initial positions for sticky elements\r\n    initStickyElements() {\r\n      this.stickyElements.forEach((el) => {\r\n        const parent = el.parentElement;\r\n        const rect = el.getBoundingClientRect();\r\n        el.dataset.stickyStart = parent.offsetTop;\r\n        el.dataset.stickyEnd = parent.offsetTop + parent.offsetHeight;\r\n        el.dataset.originalWidth = `${rect.width}px`;\r\n        el.dataset.originalHeight = `${rect.height}px`;\r\n      });\r\n    }\r\n    // Update sticky element positions\r\n    updateStickyElements() {\r\n      const scrollY = this.lenis.scroll;\r\n      const viewportHeight = window.innerHeight;\r\n      this.stickyElements.forEach((el) => {\r\n        const parent = el.parentElement;\r\n        const nextSibling = parent.nextElementSibling;\r\n        if (!nextSibling) return;\r\n        const stickyStart = parseFloat(el.dataset.stickyStart);\r\n        const stickyEnd = parseFloat(el.dataset.stickyEnd);\r\n        const parentRect = parent.getBoundingClientRect();\r\n        const nextRect = nextSibling.getBoundingClientRect();\r\n        // If next section enters halfway viewport, stop sticking\r\n        const isNextEntering = nextRect.top < viewportHeight * 0.5;\r\n        if (scrollY >= stickyStart && scrollY < stickyEnd && !isNextEntering) {\r\n          el.style.position = 'fixed';\r\n          el.style.top = `${window.innerHeight / 2 - el.offsetHeight / 2}px`;\r\n          el.style.left = `${parentRect.left + parentRect.width / 2 - el.offsetWidth / 2}px`;\r\n          el.style.opacity = '1';\r\n        } else {\r\n          el.style.position = 'relative';\r\n          el.style.opacity = '0';\r\n        }\r\n      });\r\n    }\r\n    // Apply parallax effect based on data attributes\r\n    updateParallax() {\r\n      const scrollY = this.lenis.scroll;\r\n      this.parallaxElements.forEach((el) => {\r\n        const speed = parseFloat(el.getAttribute(\"data-scroll-speed\")) || 1;\r\n        const direction = el.getAttribute(\"data-scroll-direction\") || \"vertical\";\r\n        const initialTop = parseFloat(el.dataset.initialTop);\r\n        const initialLeft = parseFloat(el.dataset.initialLeft);\r\n        let offsetX = 0, offsetY = 0;\r\n        if (direction === \"horizontal\") {\r\n          offsetX = (scrollY - initialTop) * speed * 0.1;\r\n        } else if (direction === \"vertical\") {\r\n          offsetY = (scrollY - initialTop) * speed * 0.1;\r\n        } else if (direction === \"both\") {\r\n          offsetX = (scrollY - initialTop) * speed * 0.1;\r\n          offsetY = (scrollY - initialTop) * speed * 0.1;\r\n        }\r\n        // If GSAP is present, respect GSAP transforms\r\n        let gsapX = 0, gsapY = 0;\r\n        if (window.gsap) {\r\n          gsapX = gsap.getProperty(el, \"x\") || 0;\r\n          gsapY = gsap.getProperty(el, \"y\") || 0;\r\n        }\r\n        el.style.transform = `translate3d(${offsetX + gsapX}px, ${offsetY + gsapY}px, 0)`;\r\n      });\r\n    }\r\n    // Integration with GSAP ScrollTrigger\r\n    setupScrollTrigger() {\r\n      this.lenis.on('scroll', () => {\r\n        ScrollTrigger.update();\r\n      });\r\n    }\r\n    // Public method: Scroll to a target\r\n    scrollTo(target, options = {}) {\r\n      this.lenis.scrollTo(target, options);\r\n    }\r\n    // Public method: Start scrolling\r\n    start() {\r\n      this.lenis.start();\r\n    }\r\n    // Public method: Stop scrolling\r\n    stop() {\r\n      this.lenis.stop();\r\n    }\r\n    // Public method: Destroy the instance\r\n    destroy() {\r\n      this.lenis.destroy();\r\n      FeatherScroll.instances = FeatherScroll.instances.filter((instance) => instance !== this);\r\n    }\r\n    // Public method: Get scroll position\r\n    getScrollPosition() {\r\n      return this.lenis.scroll;\r\n    }\r\n    // Update Lenis options dynamically\r\n    updateOptions(newOptions) {\r\n      Object.assign(this.lenis.options, newOptions);\r\n    }\r\n  }\r\nexport default FeatherScroll;\r\n\r\n// Also attach to window for CDN users\r\nif (typeof window !== 'undefined') {\r\n  window.FeatherScroll = FeatherScroll;\r\n}"],"names":["clamp","min","input","max","Math","Animate","isRunning","value","from","to","currentTime","lerp","duration","easing","onUpdate","advance","deltaTime","this","completed","linearProgress","easedProgress","x","y","lambda","t","exp","damp","round","stop","fromTo","lerp2","onStart","Dimensions","constructor","wrapper","content","autoResize","debounce","debounceValue","debouncedResize","callback","delay","timer","args","context","clearTimeout","setTimeout","apply","resize","Window","window","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","width","height","scrollHeight","scrollWidth","destroy","disconnect","removeEventListener","onWrapperResize","onContentResize","innerWidth","innerHeight","clientWidth","clientHeight","limit","Emitter","events","emit","event","callbacks","i","length","on","cb","push","filter","off","LINE_HEIGHT","listenerOptions","passive","VirtualScroll","element","options","wheelMultiplier","touchMultiplier","onWindowResize","onWheel","onTouchStart","onTouchMove","onTouchEnd","touchStart","lastDelta","emitter","clientX","clientY","targetTouches","deltaX","deltaY","deltaMode","Lenis","_isScrolling","_isStopped","_isLocked","_preventNextNativeScrollEvent","_resetVelocityTimeout","__rafID","isTouching","time","userData","lastVelocity","velocity","direction","targetScroll","animatedScroll","animate","dimensions","virtualScroll","document","documentElement","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaMultiplier","pow","infinite","orientation","gestureOrientation","prevent","overscroll","autoRaf","anchors","autoToggle","allowNestedScroll","__experimental__naiveDimensions","lenisVersion","updateClassName","actualScroll","onNativeScroll","onScrollEnd","capture","onClick","onPointerDown","onVirtualScroll","rootElement","onTransitionEnd","requestAnimationFrame","raf","cleanUpClassName","cancelAnimationFrame","e","CustomEvent","isScrolling","stopPropagation","dispatchScrollendEvent","dispatchEvent","bubbles","detail","lenisScrollEnd","propertyName","includes","property","isHorizontal","overflow","getComputedStyle","start","setScroll","scroll","scrollTo","left","behavior","top","anchor","composedPath","find","node","HTMLAnchorElement","getAttribute","startsWith","id","target","split","button","reset","data","ctrlKey","lenisStopPropagation","isTouch","type","isWheel","isClickOrTap","isStopped","isLocked","isUnknownGesture","slice","indexOf","HTMLElement","hasAttribute","checkNestedScroll","preventDefault","delta","abs","isSyncTouch","hasTouchInertia","programmatic","lastScroll","sign","offset","immediate","lock","onComplete","force","querySelector","nodeType","wrapperRect","getBoundingClientRect","rect","distance","preventNextNativeScrollEvent","Date","now","cache","_lenis","hasOverflowX","hasOverflowY","isScrollableX","isScrollableY","computedStyle","overflowXString","overflowX","overflowYString","overflowY","maxScroll","hasOverflow","isScrollable","scrollLeft","scrollTop","scrollX","scrollY","n","d","progress","isSmooth","className","trim","replace","FeatherScroll","static","body","lenis","smooth","gestureDirection","mouseSenstivity","touchSenstivity","scrollDirection","stickyElements","querySelectorAll","parallaxElements","forEach","el","dataset","initialTop","initialLeft","initStickyElements","trackScrollDirection","startRAF","instances","ScrollTrigger","setupScrollTrigger","observeBodyOverflow","updateStickyElements","updateParallax","newDirection","MutationObserver","attributes","attributeFilter","getScrollDirection","parent","parentElement","stickyStart","offsetTop","stickyEnd","offsetHeight","originalWidth","originalHeight","viewportHeight","nextSibling","nextElementSibling","parseFloat","parentRect","isNextEntering","style","position","offsetWidth","opacity","speed","offsetX","offsetY","gsapX","gsapY","gsap","getProperty","transform","update","instance","getScrollPosition","updateOptions","newOptions","Object","assign"],"mappings":"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","x_google_ignoreList":[0]}